@using LMSTT.Settings
@model LMSTT.ViewModels.Teacher.AddCourseViewModel
@{
    ViewData["Title"] = "Add Course";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Add Course</title>
    <link rel="stylesheet" href="~/css/Menu/Menu&Two.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
    <link href="~/css/teacherfile/teachercourses/addcourse/addcourse.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="menu">
            <ul>
                <li class="image">
                    <div class="forimage">
                        <img src="~/css/Images/BOOKLOGO-Photoroom.png" alt="Logo">
                        <p class="text">campus</p>
                    </div>
                </li>
                <div class="line"></div>
                <li class="Dashboard">
                    <a href="@Url.Action("TeacherDashboard", "Teacher")">
                        <i class="fa fa-address-card"></i>
                        <p>Dashboard</p>
                    </a>
                </li>
                <li class="students">
                    <a href="@Url.Action("Students", "Teacher")">
                        <i class="fa-solid fa-graduation-cap"></i>
                        <p>students</p>
                    </a>
                </li>
                <li class="courses">
                    <a href="@Url.Action("Courses", "Teacher")">
                        <i class="fa-solid fa-laptop-code"></i>
                        <p>courses</p>
                    </a>
                </li>.
                <li class="quizzes">
                    <a href="@Url.Action("TeacherQuizzesView", "Quiz")">
                        <i class="fa fa-book"></i>
                        <p>Quiz</p>
                    </a>
                </li>
                <li class="tasks">
                    <a href="@Url.Action("TeacherAssignments", "Assignment")">
                        <i class="fa-solid fa-list-check"></i>
                        <p>Tasks</p>
                    </a>
                </li>
                <div class="line bottom"></div>
                <li class="personinfo">
                    <div class="personimg">
                        <img src="~/css/Images/profilephoto.jpg" alt="Profile" />
                    </div>
                    <div class="name">
                        <p>@User.Identity.Name</p>
                        <span>Teacher</span>
                    </div>
                </li>
            </ul>
        </div>
        <div class="two">
            <div class="main">
                <div class="nav">
                    <div class="buttons">
                        <button onclick="location.href='@Url.Action("Logout", "Account")'">
                            <i class="fa fa-sign-out"></i>
                        </button>
                        <button>
                            <i class="fa-regular fa-bell"></i>
                        </button>
                        <button>
                            <i class="fa-regular fa-message"></i>
                        </button>
                    </div>
                </div>
                <div class="text">Add Course</div>
                <div class="form">
                    <form asp-action="AddCourse" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <label>Course Name</label>
                        <input asp-for="Title" placeholder="Enter course name" />
                        <span asp-validation-for="Title" class="text-danger"></span>

                        <label>Code</label>
                        <div class="code">
                            <input asp-for="Code" class="codeinput" readonly placeholder="Course code" />
                            <div>
                                <button type="button" class="generatecode" id="generateCodeBtn">Generate</button>
                            </div>
                        </div>
                        <span asp-validation-for="Code" class="text-danger"></span>

                        <label>Academic Year</label>
                        <select asp-for="AcademicYearId" asp-items="Model.AcademicYears">
                            <option value="">Select Academic Year</option>
                        </select>
                        <span asp-validation-for="AcademicYearId" class="text-danger"></span>

                        <label>Department</label>
                        <select asp-for="DepartmentId" asp-items="Model.Departments">
                            <option value="">Select Department</option>
                        </select>
                        <span asp-validation-for="DepartmentId" class="text-danger"></span>

                        <label>Course Cover (Optional)</label>
                        <input type="file" class="inputfile" asp-for="cover" accept="@FileSettings.AllowedExtensions" />
                        <small class="cover">Only @FileSettings.AllowedExtensions files are allowed with max size @FileSettings.MaxFileSizeInMB MB</small>

                        <input type="submit" value="Add" class="subbutton" />
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    
    <script>
        $(document).ready(function() {
            $('#generateCodeBtn').click(function(e) {
                e.preventDefault();
                var $btn = $(this);
                $btn.prop('disabled', true);
                $.get('@Url.Action("GenerateCode", "Teacher")', function(code) {
                    $('.codeinput').val(code);
                    $btn.prop('disabled', false);
                });
            });

            $('form').validate({
                rules: {
                    Title: {
                        required: true
                    },
                    Code: {
                        required: true
                    },
                    AcademicYearId: {
                        required: true,
                        min: 1
                    },
                    DepartmentId: {
                        required: true,
                        min: 1
                    }
                },
                messages: {
                    Title: "Course name is required",
                    Code: "Please generate a course code",
                    AcademicYearId: {
                        required: "Please select an academic year",
                        min: "Please select an academic year"
                    },
                    DepartmentId: {
                        required: "Please select a department",
                        min: "Please select a department"
                    }
                },
                errorClass: "text-danger",
                errorElement: "span",
                errorPlacement: function(error, element) {
                    if (element.hasClass('codeinput')) {
                        error.insertAfter(element.closest('.code'));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

            // Handle select elements validation on change
            $('select').on('change', function() {
                $(this).valid();
            });
        });
    </script>
</body>
</html> 